{
	"info": {
		"_postman_id": "93f98d86-5fa2-45d8-9b97-8a6e49f6420c",
		"name": "Employee-Records-Management-System API",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16835692"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"var bodyToken = responseJson.accessToken;\r",
									"pm.collectionVariables.set(\"accessToken\", bodyToken)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"manager@email.com\",\r\n  \"password\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"let bodyToken = responseJson.accessToken;\r",
									"let refresh = responseJson.refreshToken;\r",
									"pm.collectionVariables.set(\"accessToken\", bodyToken)\r",
									"pm.collectionVariables.set(\"refreshToken\",refresh)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admin@email.com\",\r\n  \"password\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login as HR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"var bodyToken = responseJson.accessToken;\r",
									"pm.collectionVariables.set(\"accessToken\", bodyToken)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admin@email.com\",\r\n  \"password\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Bearer",
								"value": "{{refresh}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/refresh-token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"refresh-token"
							]
						}
					},
					"response": []
				}
			],
			"description": "All endpoints related to authentication, and all user accounts"
		},
		{
			"name": "HR",
			"item": [
				{
					"name": "add employee",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let departments = [\"HR\",\"IT\",\"SALES\",\"MARKETING\",\"FINANCE\",\"OPERATIONS\",\"RESEARCH\",\"LEGAL\"]\r",
									"pm.variables.set(\"department\",departments[Math.floor(Math.random() * departments.length)])\r",
									"\r",
									"let employmentStatusList = [\"ACTIVE\",\"INACTIVE\",\"TERMINATED\",\"SUSPENDED\",\"PROBATION\",\"RETIRED\"]\r",
									"pm.variables.set(\"status\",employmentStatusList[Math.floor(Math.random() * employmentStatusList.length)])"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"var lastSavedId = responseJson.id;\r",
									"pm.collectionVariables.set(\"lastSavedId\",lastSavedId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"{{$randomFullName}}\",\r\n  \"jobTitle\": \"{{$randomJobTitle}}\",\r\n  \"department\": \"{{department}}\",\r\n  \"hireDate\": \"2025-01-17\",\r\n  \"employmentStatus\": \"{{status}}\",\r\n  \"contactInformation\": \"{{$randomPhoneNumber}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"email\": \"{{$randomEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/employees",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "update employee",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let departments = [\"HR\",\"IT\",\"SALES\",\"MARKETING\",\"FINANCE\",\"OPERATIONS\",\"RESEARCH\",\"LEGAL\"]\r",
									"pm.variables.set(\"department\",departments[Math.floor(Math.random() * departments.length)])\r",
									"\r",
									"let employmentStatusList = [\"ACTIVE\",\"INACTIVE\",\"TERMINATED\",\"SUSPENDED\",\"PROBATION\",\"RETIRED\"]\r",
									"pm.variables.set(\"status\",employmentStatusList[Math.floor(Math.random() * employmentStatusList.length)])"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"{{$randomFullName}}\",\r\n  \"jobTitle\": \"{{$randomJobTitle}}\",\r\n  \"department\": \"{{department}}\",\r\n  \"hireDate\": \"2025-01-12\",\r\n  \"employmentStatus\": \"{{status}}\",\r\n  \"contactInformation\": \"{{$randomPhoneNumber}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"email\": \"{{$randomEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/employees/{{lastSavedId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"employees",
								"{{lastSavedId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get With Filter Example",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get With Search",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/employees/{{lastSavedId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"employees",
								"{{lastSavedId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "CRUD operations"
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "login as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"let bodyToken = responseJson.accessToken;\r",
									"let refresh = responseJson.refreshToken;\r",
									"pm.collectionVariables.set(\"accessToken\", bodyToken)\r",
									"pm.collectionVariables.set(\"refreshToken\",refresh)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admin@email.com\",\r\n  \"password\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register new user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{lastSavedId}}\",\r\n    \"password\": \"{{$randomPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "update role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"role\": \"HR\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/employees/{{lastSavedId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"employees",
								"{{lastSavedId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "add new Manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"var lastSavedId = responseJson.id;\r",
									"pm.collectionVariables.set(\"lastSavedId\",lastSavedId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let departments = [\"HR\",\"IT\",\"SALES\",\"MARKETING\",\"FINANCE\",\"OPERATIONS\",\"RESEARCH\",\"LEGAL\"]\r",
									"pm.variables.set(\"department\",departments[Math.floor(Math.random() * departments.length)])\r",
									"\r",
									"let employmentStatusList = [\"ACTIVE\",\"INACTIVE\",\"TERMINATED\",\"SUSPENDED\",\"PROBATION\",\"RETIRED\"]\r",
									"pm.variables.set(\"status\",employmentStatusList[Math.floor(Math.random() * employmentStatusList.length)])"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"{{$randomFullName}}\",\r\n  \"jobTitle\": \"{{$randomJobTitle}}\",\r\n  \"department\": \"{{department}}\",\r\n  \"hireDate\": \"2025-01-17\",\r\n  \"employmentStatus\": \"{{status}}\",\r\n  \"contactInformation\": \"{{$randomPhoneNumber}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"role\": \"MANAGER\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/employees",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete manager",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/employees/{{lastSavedId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"employees",
								"{{lastSavedId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get report",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			],
			"description": "Admin has access to everything else, but is the only one who can register new users, change roles, and his account cant be delted by users with lower authorization"
		},
		{
			"name": "Manager",
			"item": [
				{
					"name": "login as manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"var bodyToken = responseJson.accessToken;\r",
									"pm.collectionVariables.set(\"accessToken\", bodyToken)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"manager@email.com\",\r\n  \"password\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "get employees in department",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"var lastSavedId = responseJson.page[0]?.id;\r",
									"pm.collectionVariables.set(\"lastSavedId\",lastSavedId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/employees",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "update employee",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			],
			"description": "basic crud operation but only for employees within their department"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "localhost:8080"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": ""
		},
		{
			"key": "lastSavedId",
			"value": ""
		}
	]
}